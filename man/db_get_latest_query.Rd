% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_SQLite.R
\name{db_get_latest_query}
\alias{db_get_latest_query}
\title{Retrieve latest query}
\usage{
db_get_latest_query(
  db_path,
  query_id = new_query$query_id,
  n = new_query$n,
  db_table = "query_data",
  slice_vars = "timestamp",
  group_vars = c("query_id", "n")
)
}
\arguments{
\item{db_path}{Character vector. Needs to be a valid path to a database.}

\item{query_id}{Character string with the query identifier to extract from
the database.}

\item{n}{Numerical or character string, with the query follow-up number to
extract}

\item{db_table}{Character vector with the name of the table to read from.}

\item{slice_vars}{Character vector. Names of the variables that will be used
to slice the data frame. Note that the order matters: Slicing will occur
for each variable in this vector successively,}

\item{group_vars}{Character vector. Variable names of the variables to
perform the grouping on.}
}
\value{
A data frame
}
\description{
Small helper function to retrieve the latest query with the provided query_id
and query follow-up number (n)
}
\examples{
local({
temp_path <- withr::local_tempfile(fileext = ".sqlite") 
con <- get_db_connection(temp_path)

new_query <- dplyr::tibble(
 query_id = "ID124234", 
 subject_id = "ID1",
 n = 1,
 timestamp = "2024-02-05 01:01:01",
 other_info = "testinfo"
) 
DBI::dbWriteTable(con, "query_data", new_query)
db_get_latest_query(temp_path, query_id = "ID124234", n = 1)
})

}
